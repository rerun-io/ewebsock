[package]
name = "ewebsock"
version = "0.5.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
description = "WebSocket client that works natively and on the web (WASM)"
edition = "2021"
rust-version = "1.76"
license = "MIT OR Apache-2.0"
readme = "../README.md"
homepage = "https://github.com/rerun-io/ewebsock"
repository = "https://github.com/rerun-io/ewebsock"
categories = ["web-programming", "wasm"]
keywords = ["websocket", "websockets", "portable", "native", "web"]
include = ["../LICENSE-APACHE", "../LICENSE-MIT", "**/*.rs", "Cargo.toml"]

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[lints]
workspace = true

[features]
default = []

tls = ["tungstenite/rustls-tls-webpki-roots"]

## Opt-in to the tokio executor.
##
## This adds a lot of dependencies,
## but may yield lower latency and CPU usage
## when using `ws_connect`.
##
## Will ignore any `ControlFlow::Break` returned from the `on_event` callback.
tokio = [
  "dep:async-stream",
  "dep:futures",
  "dep:futures-util",
  "dep:tokio",
  "dep:tokio-tungstenite",
]


[dependencies]
document-features = "0.2"
log = "0.4"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tungstenite = { version = ">=0.17, <=0.21" }

# Optional dependencies for feature "tokio":
async-stream = { version = "0.3", optional = true }
futures = { version = "0.3", optional = true }
futures-util = { version = "0.3", optional = true, default-features = false, features = [
  "sink",
  "std",
] }
tokio = { version = "1.16", features = ["rt", "sync"], optional = true }
tokio-tungstenite = { version = ">=0.17, <=0.21", optional = true }

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
js-sys = "0.3"
wasm-bindgen-futures = "0.4"

[dependencies.web-sys]
version = "0.3"
features = [
  "BinaryType",
  "Blob",
  "ErrorEvent",
  "FileReader",
  "MessageEvent",
  "ProgressEvent",
  "WebSocket",
]
